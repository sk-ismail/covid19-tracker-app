{"version":3,"sources":["components/HospitalStats/TotalHospitals.jsx","components/colors.js","components/HospitalStats/StateHospital.jsx","components/HospitalStats/HospitalStats.jsx","components/Map/Map.jsx","components/MainData.jsx","images/india.png","components/IndiaData.jsx","components/StatesData.jsx","components/TimelineData.jsx","components/stateLogo.js","components/StatesDataTable.jsx","components/Home/Home.jsx","components/Navbar.jsx","App.js","index.js"],"names":["TotalHospitals","useState","totalBeds","setTotalBeds","fetchData","a","axios","get","then","res","data","summary","catch","error","console","log","useEffect","className","ruralHospitals","ruralBeds","totalHospitals","urbanHospitals","urbanBeds","colors","StateHospital","stateNames","Beds","hospitals","i","regional","length","push","state","labels","datasets","label","borderWidth","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","width","height","options","responsive","maintainAspectRatio","HospitalStats","CovidTests","currentplace","setCurrentplace","latitude","longitude","zoom","viewport","setViewport","pin","setpin","err","onViewportChange","nextViewport","mapStyle","mapboxApiAccessToken","transitionDuration","map","p","key","updated","countryInfo","lat","long","closeButton","closeOnClick","onClose","anchor","src","flag","alt","country","cases","todayCases","active","deaths","todayDeaths","recovered","todayRecovered","offsetLeft","offsetTop","zIndex","Room","onClick","id","style","fontSize","color","cursor","_id","MainData","setState","critical","IndiaData","india","StatesData","chart","setChart","loading","setLoading","window","innerWidth","innerHeight","Dimensions","setDimensions","pieBar","setpieBar","addEventListener","locations","confirmedCasesIndian","location","loc","confirmedCaseIndian","chartData","setTimeout","styles","chartsfx","prevCheck","highlightColor","delay","count","TimelineData","TimeLinechart","setTimeLinechart","dates","casesperday","discharged","date","day","caseperday","total","heigh","stateLogo","ap1","StatesDataTable","Table","setTable","tableData","apisData","apiData","j","class","cellspacing","item","totalConfirmed","confirmedCasesForeign","Home","Navbar","exact","to","activeClassName","path","Map","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7a56601f.chunk.js","sourcesContent":["import React,{useState, useEffect} from 'react'\nimport './TotalHospital.css'\nimport axios from 'axios'\n\nconst TotalHospitals = () => {\n\n    const [totalBeds, setTotalBeds] = useState([])\n\n    const fetchData= async ()=>{ \n    \n        //const distData=[]\n    \n        await axios.get('https://api.rootnet.in/covid19-in/hospitals/beds')\n        .then((res) => {\n            //setState(res)\n            \n            \n            //distData.push(distsData) \n            setTotalBeds(res.data.data.summary)\n            //console.log(res.data.data.regional)\n                \n            })\n        .catch((error)=> console.log(error))}\n    \n       \n        useEffect(() => {\n            fetchData()\n          }, [])\n    return (\n        <div className='TotalHospitalApp' >\n            <div><h1>Hospitals and Beds availability</h1></div>\n            \n            <div className=\"cardsContainer\">\n                <div className='borderCards'>\n             <div className='ruralCard'>\n                 <h2>Rural Area</h2>\n              <div>Hospitals: <span>{totalBeds.ruralHospitals}</span> </div>\n              <div>Beds: <span>{totalBeds.ruralBeds}</span> </div>  \n            </div></div>\n           <div className='borderCards'><div className='totalCard'>\n                 <h2>Total Stats</h2>\n              <div>Hospitals: <span>{totalBeds.totalHospitals}</span> </div>\n              <div>Beds: <span>{totalBeds.totalBeds}</span> </div>  \n            </div></div> \n           <div className='borderCards'><div className='urbanCard123'>\n                 <h2>Urban Area</h2>\n              <div>Hospitals: <span>{totalBeds.urbanHospitals}</span> </div>\n              <div>Beds: <span>{totalBeds.urbanBeds}</span> </div>  \n            </div></div> \n            </div>\n\n\n        </div>\n    )\n}\n\nexport default TotalHospitals\n","\nconst colors=[\n'rgba(255, 173, 173, 1)',\n'rgba(255, 194, 173, 1)',\t\n'rgba(255, 214, 173, 1)',\t\n'rgba(255, 222, 173, 1)',\t\n'rgba(255, 235, 173, 1)',\n'rgba(255, 255, 173, 1)',\t\n'rgba(235, 255, 173, 1)',\t\n'rgba(214, 255, 173, 1)',\t\n'rgba(194, 255, 173, 1)',\t\n'rgba(173, 255, 173, 1)',\t\n'rgba(173, 255, 194, 1)',\t\n'rgba(173, 255, 214, 1)',\t\n'rgba(173, 255, 235, 1)',\t\n'rgba(173, 255, 255, 1)',\t\n'rgba(173, 235, 255, 1)',\t\n'rgba(173, 214, 255, 1)',\t\n'rgba(173, 194, 255, 1)',\n'rgba(173, 173, 255, 1)',\t\n'rgba(194, 173, 255, 1)',\n'rgba(214, 173, 255, 1)',\t\n'rgba(235, 173, 255, 1)',\t\n'rgba(255, 173, 255, 1)',\t\n'rgba(255, 173, 235, 1)',\t\n'rgba(255, 173, 214, 1)',\t\n'rgba(255, 173, 194, 1)',\t\n'rgba(255, 173, 173, 1)',\n'rgba(255, 222, 173, 1)',\t\n'rgba(253, 222, 175, 1)',\t\n'rgba(251, 222, 177, 1)',\t\n'rgba(249, 221, 180, 1)',\t\n'rgba(247, 221, 182, 1)',\t\n'rgba(245, 220, 184, 1)',\t\n'rgba(243, 220, 186, 1)',\t\n'rgba(241, 220, 188, 1)',\t\n'rgba(239, 219, 190, 1)',\n'rgba(255, 153, 0, 1)',\n'rgba(230, 138, 0, 1)',\n'rgba(204, 122, 0, 1)',\n'rgba(179, 107, 0, 1)'\n\n]\n\nexport default colors;","import React,{useState, useEffect} from 'react'\nimport './StateHospital.css'\nimport axios from 'axios'\nimport { Bar } from 'react-chartjs-2'\nimport colors from '../colors'\nconst StateHospital = () => {\n\n    const [totalBeds, setTotalBeds] = useState([])\n    const stateNames=[]\n    const Beds=[]\n    const hospitals=[]\n    const fetchData= async ()=>{ \n    \n        //const distData=[]\n    \n        await axios.get('https://api.rootnet.in/covid19-in/hospitals/beds')\n        .then((res) => {\n            //setState(res)\n            \n            for(let i=0; i<(res.data.data.regional).length -1; i++){\n                    \n                stateNames.push(res.data.data.regional[i].state)\n                Beds.push(res.data.data.regional[i].totalBeds)\n                hospitals.push(res.data.data.regional[i].totalHospitals)\n                //console.log(res.data.data.regional[i])\n            }\n            \n            //console.log(Beds)\n            //distData.push(distsData) \n            setTotalBeds({\n                labels : stateNames,\n                datasets : [\n                    {\n                        label: 'Total Beds',\n                        data: Beds,\n                        borderWidth:2,\n                        backgroundColor: colors,\n                        borderColor: \"rgba(0,0,0,0.9)\",\n                        borderCapStyle: \"butt\",\n                        borderDash: [],\n                        borderDashOffset: 0.0,\n                        borderJoinStyle: \"miter\",\n                        pointBorderColor: \"rgba(75,192,192,1)\",\n                        pointBackgroundColor: \"#fff\",\n                        pointBorderWidth: 1,\n                        pointHoverRadius: 5,\n                        pointHoverBackgroundColor: \"rgba(75,192,192,1)\",\n                        pointHoverBorderColor: \"rgba(220,220,220,1)\",\n                        pointHoverBorderWidth: 2,\n                        pointRadius: 1,\n                        pointHitRadius: 10\n                        \n                    },\n                    {\n                        label: 'Total Hospitals',\n                        data: hospitals,\n                        borderWidth:2,\n                        backgroundColor: \"rgba(0,0,0,0.9)\",\n                        borderColor: \"rgba(0,0,0,0.9)\",\n                        borderCapStyle: \"butt\",\n                        borderDash: [],\n                        borderDashOffset: 0.0,\n                        borderJoinStyle: \"miter\",\n                        pointBorderColor: \"rgba(75,192,192,1)\",\n                        pointBackgroundColor: \"#fff\",\n                        pointBorderWidth: 1,\n                        pointHoverRadius: 5,\n                        pointHoverBackgroundColor: \"rgba(75,192,192,1)\",\n                        pointHoverBorderColor: \"rgba(220,220,220,1)\",\n                        pointHoverBorderWidth: 2,\n                        pointRadius: 1,\n                        pointHitRadius: 10\n                        \n                    }\n                ]\n                \n            })\n            \n                \n            })\n        .catch((error)=> console.log(error))}\n    \n       \n        useEffect(() => {\n            fetchData()\n          }, [])\n    return (\n        <div>\n         <Bar\n        data={totalBeds}\n        width={1000}\n        height={500}\n        options={{\n            responsive: true,\n            maintainAspectRatio: false,\n          }}\n        />\n        </div>\n    )\n}\n\nexport default StateHospital\n","import React from 'react'\nimport './HospitalStats.css'\n//import axios from 'axios'\nimport TotalHospitals from './TotalHospitals'\nimport StateHospital from './StateHospital'\nconst HospitalStats = () => {\n\n\n\n    return (\n        <div>\n            <TotalHospitals/>\n            <StateHospital/>\n            \n        </div>\n    )\n}\n\nexport default HospitalStats\n","import axios from 'axios'\nimport './MapData.css'\nimport * as React from 'react';\nimport { useState, useEffect } from 'react';\nimport ReactMapGL,{ Marker, Popup} from 'react-map-gl';\nimport {Room } from '@material-ui/icons'\nimport 'mapbox-gl/dist/mapbox-gl.css';\n//import mapboxgl from 'mapbox-gl';\n// eslint-disable-next-line import/no-webpack-loader-syntax\n//mapboxgl.workerClass = require('worker-loader!mapbox-gl/dist/mapbox-gl-csp-worker').default;\n\nconst CovidTests = () => {\n    const [currentplace, setCurrentplace] = useState([]);\n    const [viewport, setViewport] = useState({\n        width: '100vw',\n        height: '100vh',\n        latitude: 17.6868,\n        longitude: 83.2185,\n        zoom: 2\n      });\n      const [pin, setpin] = useState([])\n    useEffect(() => {\n         const fetchData=async ()=>{\n                     await axios.get('https://disease.sh/v3/covid-19/countries')\n                     .then((res)=>{\n                         setpin(res.data)\n                           //console.log(res.data)\n\n                     })\n                     .catch((err)=>{console.log(err)})\n\n         }\n         fetchData()\n    }, [])\n\n    const handleRoomClick=(id, lat, long)=>{\n        setCurrentplace(id)\n        setViewport({...viewport, latitude: lat/2, longitude: long/2})\n      }\n    return (\n        <div>\n         <ReactMapGL\n      {...viewport}\n      onViewportChange={nextViewport => setViewport(nextViewport)}\n      mapStyle='mapbox://styles/sk-ismail/ckqjtp95c0ls317mkbqhic7cz'\n      mapboxApiAccessToken='pk.eyJ1Ijoic2staXNtYWlsIiwiYSI6ImNrcWpyY2FjeDAxeTcyd3BtMnNoMTJidGgifQ.nKSUusfBsmDiVaPASKUcYg'\n      transitionDuration={200}\n    >\n{pin.map((p, key)=>(\n       <>\n       { p.updated === currentplace && (<Popup\n    latitude={p.countryInfo.lat}\n    longitude={p.countryInfo.long}\n    closeButton={true}\n    closeOnClick={false}\n    \n    onClose={() => setCurrentplace(null)}\n    className=\"popupCard1\"\n    anchor=\"top\" >\n          <div className='popupCard'>\n\n<div className='usernameCard1'>\n\n<div className='flag'><img src={`${p.countryInfo.flag}`} alt='pic' /></div>\n</div>\n<div className='usernameCard'>\n<label className='labelCard'>Country:</label>\n<div className='content'>{p.country}</div>\n</div>\n<div className='usernameCard'>\n<label className='labelCard'>Cases:</label>\n<div className='content'>{p.cases}</div>\n</div>\n<div className='usernameCard'>\n<label className='labelCard'>TodayCases:</label>\n<div className='content'>{p.todayCases}</div>\n</div>\n<div className='usernameCard'>\n<label className='labelCard'>Active:</label>\n<div className='content'>{p.active}</div>\n</div>\n<div className='usernameCard'>\n<label className='labelCard'>Deaths:</label>\n<div className='content'>{p.deaths}</div>\n</div>\n<div className='usernameCard'>\n<label className='labelCard'>TodayDeaths:</label>\n<div className='content'>{p.todayDeaths}</div>\n</div>\n<div className='usernameCard'>\n<label className='labelCard'>Recovered:</label>\n<div className='content'>{p.recovered}</div>\n</div>\n<div className='usernameCard'>\n<label className='labelCard'>TodayRecovered:</label>\n<div className='content'>{p.todayRecovered}</div>\n</div>\n\n\n</div>\n    \n  </Popup>)}\n      <Marker\n      latitude={p.countryInfo.lat}\n      longitude={p.countryInfo.long}\n      offsetLeft={-viewport.zoom*3.5}\n      offsetTop={-viewport.zoom*7}\n      zIndex={-100}\n      key={p.countryInfo._id}\n          >\n  \n  <Room  onClick={()=>handleRoomClick(p.updated, p.countryInfo.lat, p.countryInfo.long)} style={{ fontSize: viewport.zoom*7 , color: p.updated === currentplace? \"red\" : \"white\",   cursor: \"pointer\"}}/>\n\n</Marker>\n\n</>\n))}\n\n    </ReactMapGL>\n        </div>\n    )\n}\n\nexport default CovidTests\n","import React, {useEffect, useState} from 'react';\nimport axios from 'axios'\nimport './MainData.css'\n\n//import { Button } from '@material-ui/core'\n\n//import { PieChart } from 'react-minimal-pie-chart'\n\n\n\nfunction MainData() {\n\n\n    const [state, setState] = useState([])\n\n    \n    const fetchData= async ()=>{\n\n        await axios.get('https://disease.sh/v3/covid-19/all')\n        .then(({data})=>{ \n          setState(data) \n          //console.log(data) \n        \n        })\n        .catch((error)=>{ console.log(error)})\n        \n      }\n    \n      useEffect(() => {\n        fetchData()\n      }, [])\n\n    return (\n        <div className='app'>\n            \n            <div className='wdtxt'>World Data</div>\n            <div className='worldData'>\n                 <div className='totals'>\n                  <div className=\"card\">\n                      <div className=\"cardContainer\">\n                        <b>Total Cases: </b>               \n                            {state.cases}\n                      </div>\n                  </div>\n                    \n                    <div className=\"card\">\n                    <div className=\"cardContainer\">\n                    <b>Total Deaths: </b>               \n                          <span className='death'>{state.deaths}</span>    \n                    </div>\n                  </div>\n\n                  </div>\n                  \n               <div className='totals2'>\n\n                  <div className=\"card\">\n                    <div className=\"cardContainer\">\n                    <b>Active: </b>               \n                          <span className='active'>{state.active}</span>    \n                    </div>\n                  </div>\n\n                  <div className=\"card\">\n                    <div className=\"cardContainer\">\n                    <b>Critical: </b>               \n                          <span className='death'>{state.critical}</span>    \n                    </div>\n                  </div>\n\n               </div>\n\n                  <div className='totals3'>\n                  <div className=\"card\">\n                    <div className=\"cardContainer\">\n                    <b>Today Cases: </b>               \n                          <span className='tCases'>{state.todayCases}</span>    \n                    </div>\n                  </div>\n                  <div className=\"card\">\n                    <div className=\"cardContainer\">\n                    <b>Today Deaths: </b>               \n                          <span className='death'>{state.todayDeaths}</span>    \n                    </div>\n                  </div>\n                  </div>\n\n                  <div className='totals3'>\n                  <div className=\"card\">\n                    <div className=\"cardContainer\">\n                    <b>Total Recovered: </b>               \n                          <span className='tCases'>{state.recovered}</span>    \n                    </div>\n                  </div>\n                  <div className=\"card\">\n                    <div className=\"cardContainer\">\n                    <b>Today Recovered: </b>               \n                          <span className='death'>{state.todayRecovered}</span>    \n                    </div>\n                  </div>\n                  </div>\n             \n                  </div>\n             \n        </div>\n    )\n}\n\nexport default MainData\n","export default __webpack_public_path__ + \"static/media/india.be08e68d.png\";","import React, { useEffect, useState} from 'react'\nimport './IndiaData.css'\nimport axios from 'axios'\nimport india from '../images/india.png'\nfunction IndiaData() {\n\n    const [state, setState] = useState([])\n   \n   const fetchData= async ()=>{ \n    \n    await axios.get('https://disease.sh/v3/covid-19/countries/india?strict=true')\n    .then((res) => {\n        setState(res.data)\n            console.log(res)\n        })\n    .catch((error)=> console.log(error))}\n\n    useEffect(() => {\n        fetchData()\n      }, [])\n\n    return (\n        <div className='IndiaApp'>\n            <div className='indiaData'>\n           <img className='indiaIcon' alt='india' src={india}></img>\n           <div className='tIndiaCases'>\n           <div className='cardIndia'><div className='datatxt'><b>Total Cases:</b><span className='totalIndia'>{state.cases}</span></div></div>\n          <div className='cardIndia'><div className='datatxt'><b>Recovered:</b><span className='recoveredIndia'>{state.recovered}</span></div></div>\n           </div>\n           <div className='cardIndia'><div className='deathtxt'><b>Deaths:</b><span className='deathIndia'>{state.deaths}</span></div></div>\n           <div className='tIndiaCases'>\n           <div className='cardIndia'><div className='datatxt'><b>Today Cases:</b><span className='totalIndia'>{state.todayCases}</span></div></div>\n          <div className='cardIndia'><div className='datatxt'><b>Today Recovered:</b><span className='recoveredIndia'>{state.todayRecovered}</span></div></div>\n           </div>\n           </div>\n           \n        </div>\n    )\n}\n\nexport default IndiaData\n","import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\nimport { Bar, Pie} from 'react-chartjs-2'\nimport './StatesData.css'\nimport colors from './colors'\nimport Skeleton, {SkeletonTheme} from 'react-loading-skeleton'\n\nfunction StatesData() {\n    \n// Line, Bubble, Chart, Pie, Radar, Scatter, PolarArea\n    const [chart, setChart] = useState([])\n    \n    const [loading, setLoading] = useState(true)\n\n    const [Dimensions, setDimensions] = useState({\n        width: window.innerWidth,\n        height: window.innerHeight\n\n    })\n\n    const [pieBar, setpieBar] = useState(true)\n\n\n    useEffect(()=>{\n        window.addEventListener('resize', ()=>{\n\n                setDimensions({\n                    width: window.innerWidth,\n                    height: window.innerHeight\n                })\n                \n                \n            })\n            const chartData= async ()=>{\n\n                let locations=[]\n                let confirmedCasesIndian=[]\n                let deaths=[]\n                \n             \n                   await axios.get('https://api.rootnet.in/covid19-in/stats/latest')\n                     .then(({data}) => {\n                         \n                         for(let i=1; i<(data.data.regional).length; i++){\n         \n                             let location = data.data.regional[i].loc\n                             let confirmedCaseIndian = data.data.regional[i].confirmedCasesIndian\n                             locations.push(location)\n                             deaths.push(data.data.regional[i].deaths)\n                             confirmedCasesIndian.push(confirmedCaseIndian)}\n                                  \n                             //console.log(data)\n                            \n         \n                             \n                             setChart({\n                                 labels : locations,\n                                 datasets : [\n                                     {\n                                         label: 'Confirmed Cases',\n                                         data: confirmedCasesIndian,\n                                         borderWidth:2,\n                                         backgroundColor: colors,\n                                         borderColor: \"rgba(0,0,0,0.9)\",\n                                         borderCapStyle: \"butt\",\n                                         borderDash: [],\n                                         borderDashOffset: 0.0,\n                                         borderJoinStyle: \"miter\",\n                                         pointBorderColor: \"rgba(75,192,192,1)\",\n                                         pointBackgroundColor: \"#fff\",\n                                         pointBorderWidth: 1,\n                                         pointHoverRadius: 5,\n                                         pointHoverBackgroundColor: \"rgba(75,192,192,1)\",\n                                         pointHoverBorderColor: \"rgba(220,220,220,1)\",\n                                         pointHoverBorderWidth: 2,\n                                         pointRadius: 1,\n                                         pointHitRadius: 10\n                                         \n                                     },\n                                     {\n                                        label: 'Deaths',\n                                        data: deaths,\n                                        borderWidth:2,\n                                        backgroundColor:\"rgba(0,0,0,0.7)\",\n                                        borderColor: \"rgba(0,0,0,0.9)\",\n                                        borderCapStyle: \"butt\",\n                                        borderDash: [],\n                                        borderDashOffset: 0.0,\n                                        borderJoinStyle: \"miter\",\n                                        pointBorderColor: \"rgba(75,192,192,1)\",\n                                        pointBackgroundColor: \"#fff\",\n                                        pointBorderWidth: 1,\n                                        pointHoverRadius: 5,\n                                        pointHoverBackgroundColor: \"rgba(75,192,192,1)\",\n                                        pointHoverBorderColor: \"rgba(220,220,220,1)\",\n                                        pointHoverBorderWidth: 2,\n                                        pointRadius: 1,\n                                        pointHitRadius: 10\n                                        \n                                    }\n                                 ]\n                                 \n                             })\n                             \n                         \n                         \n                     })\n                     .catch((error)=> console.log(error))\n         \n                    \n         \n                 \n         \n             }\n        //setLoading(false)\n        chartData()\n        setTimeout(() => setLoading(false), 1000)\n    },[])\n\n    //console.log(Dimensions)\n\n    const styles={\n        chartsfx:{\n            width: (Dimensions.width)/1.5,\n            height: (Dimensions.height)/1.9\n            \n        }\n        \n    }\n\n    const pieHandle=()=>{\n        setpieBar(prevCheck=> !prevCheck)\n    }\n    const barHandle=()=>{\n        setpieBar(false)\n    }\n\n\n\n    return (\n    <div className='StatesApp'>\n\n\n     {loading===false ?(\n        <div className='chartStates' style={styles.chartsfx} >\n            <div >\n            <button className='chartbtns'onClick={()=>pieHandle()}>Bar</button>\n            <button className='chartbtns'onClick={()=>barHandle()}>Pie</button>\n           \n        </div>\n    { !pieBar? (\n        <Pie\n        data={chart}\n        width={1000}\n        height={500}\n        options={{\n            responsive: true,\n            maintainAspectRatio: false,\n          }}\n        />\n    ): (   <Bar\n        data={chart}\n        width={1000}\n        height={500}\n        options={{\n            responsive: true,\n            maintainAspectRatio: false,\n          }}\n        />) } \n    </div>):( <div> \n                    <SkeletonTheme color=\"lightgray\" highlightColor=\"#999\">\n                    <div >\n                        <Skeleton className='skeletonTimeline' width={500} height={50} delay={0.1} count={5} />\n                    </div>\n                    </SkeletonTheme></div>)\n                }\n        </div>\n\n    )\n}\n\nexport default StatesData\n","import axios from 'axios'\nimport React from 'react'\nimport { useEffect, useState } from 'react'\nimport './Timeline.css'\nimport { Line } from 'react-chartjs-2'\nimport colors from './colors'\nimport Skeleton, {SkeletonTheme} from 'react-loading-skeleton'\n\nconst url='https://api.rootnet.in/covid19-in/stats/history'\n\nfunction TimelineData() {\n\n    //still working on it\n\n    const [TimeLinechart, setTimeLinechart] = useState([])\n    const [loading, setLoading] = useState(true)\n    const [Dimensions, setDimensions] = useState({\n        width: window.innerWidth,\n        height: window.innerHeight\n    })\n\n    let dates=[]\n    let casesperday=[]\n    let deaths=[]\n    let discharged=[]\n  const fetchData=async ()=>{ await axios.get(url)\n    .then((res)=>{ \n        //console.log(res)\n        for(let i=0; i<=(res.data.data).length; i++){\n\n            let date=res.data.data[i*20].day;\n            let caseperday=res.data.data[i*20].summary.total;\n            //console.log(res.data.data[i].day)\n            //console.log(res.data.data)\n            casesperday.push(caseperday)\n            dates.push(date)\n            deaths.push(res.data.data[i*20].summary.deaths)\n            discharged.push(res.data.data[i*20].summary.discharged)\n           \n        \n            setTimeLinechart({\n                labels : dates,\n                datasets : [\n                    {\n                        label: 'Total Cases',\n                        data: casesperday,\n                        borderWidth:2,\n                        backgroundColor: colors,\n                        borderColor: \"rgba(0,0,0,0.9)\",\n                        borderCapStyle: \"butt\",\n                        borderDash: [],\n                        borderDashOffset: 0.0,\n                        borderJoinStyle: \"miter\",\n                        pointBorderColor: \"rgba(75,192,192,1)\",\n                        pointBackgroundColor: \"#fff\",\n                        pointBorderWidth: 1,\n                        pointHoverRadius: 5,\n                        pointHoverBackgroundColor: \"rgba(75,192,192,1)\",\n                        pointHoverBorderColor: \"rgba(220,220,220,1)\",\n                        pointHoverBorderWidth: 2,\n                        pointRadius: 1,\n                        pointHitRadius: 10\n                        \n                    },\n                    {\n                        label: 'Deaths',\n                        data: deaths,\n                        borderWidth:2,\n                        backgroundColor: colors,\n                        borderColor: \"rgba(0,0,0,0.9)\",\n                        borderCapStyle: \"butt\",\n                        borderDash: [],\n                        borderDashOffset: 0.0,\n                        borderJoinStyle: \"miter\",\n                        pointBorderColor: \"rgba(75,192,192,1)\",\n                        pointBackgroundColor: \"#fff\",\n                        pointBorderWidth: 1,\n                        pointHoverRadius: 5,\n                        pointHoverBackgroundColor: \"rgba(75,192,192,1)\",\n                        pointHoverBorderColor: \"rgba(220,220,220,1)\",\n                        pointHoverBorderWidth: 2,\n                        pointRadius: 1,\n                        pointHitRadius: 10\n                        \n                    },\n                    {\n                        label: 'Discharged',\n                        data: discharged,\n                        borderWidth:2,\n                        backgroundColor: colors,\n                        borderColor: \"rgba(0,0,0,0.9)\",\n                        borderCapStyle: \"butt\",\n                        borderDash: [],\n                        borderDashOffset: 0.0,\n                        borderJoinStyle: \"miter\",\n                        pointBorderColor: \"rgba(75,192,192,1)\",\n                        pointBackgroundColor: \"#fff\",\n                        pointBorderWidth: 1,\n                        pointHoverRadius: 5,\n                        pointHoverBackgroundColor: \"rgba(75,192,192,1)\",\n                        pointHoverBorderColor: \"rgba(220,220,220,1)\",\n                        pointHoverBorderWidth: 2,\n                        pointRadius: 1,\n                        pointHitRadius: 10\n                        \n                    }\n                ]\n                \n            })\n        }\n        \n    })\n    .catch((err)=>{ console.log(err)})}\n\n    useEffect(()=>{\n        window.addEventListener('resize', ()=>{\n            setDimensions({\n                width: window.innerWidth,\n                heigh: window.innerHeight\n            })\n        })\n        \n        fetchData()\n        //setLoading(false)\n        setTimeout(() =>setLoading(false) , 3000)\n    },[])\n\n    return (\n\n        \n    <div className='TimelineApp'>\n\n            {loading===false ? (\n            <div className='chartTimeline' style={{width: (Dimensions.width)/1.5, height: (Dimensions.height)/1.5}}>\n     <Line\n\tdata={TimeLinechart}\n \n    width={1000}\n    height={500}\n\toptions={{\n        responsive: true,\n        maintainAspectRatio: false,\n      }}\n\t/>\n    </div>):(<div >\n                    <SkeletonTheme color=\"lightgray\" highlightColor=\"#999\">\n                    <div >\n                        <Skeleton className='skeletonTimeline' width={500} height={50} delay={0.1} count={5} />\n                    </div>\n                    </SkeletonTheme>\n            </div>)\n\n            }\n           \n        </div>\n    )\n}\n\nexport default TimelineData\n","//import ap from '../images/india.png'\n\nconst stateLogo=[\n {\n   ap1 : 'https://user-images.githubusercontent.com/42185028/123511030-905a2080-d69c-11eb-813d-5f14bdd0a1a0.png'   \n},\n{\n    ap1 : 'https://user-images.githubusercontent.com/42185028/123511030-905a2080-d69c-11eb-813d-5f14bdd0a1a0.png'    \n },\n {\n    ap1 : 'https://user-images.githubusercontent.com/42185028/123511030-905a2080-d69c-11eb-813d-5f14bdd0a1a0.png'\n },\n {\n    ap1 : 'https://user-images.githubusercontent.com/42185028/123511030-905a2080-d69c-11eb-813d-5f14bdd0a1a0.png'  \n },\n {\n    ap1 :'https://user-images.githubusercontent.com/42185028/123511030-905a2080-d69c-11eb-813d-5f14bdd0a1a0.png'    \n },\n {\n    ap1 :'https://user-images.githubusercontent.com/42185028/123511030-905a2080-d69c-11eb-813d-5f14bdd0a1a0.png'    \n },\n {\n    ap1 : 'https://user-images.githubusercontent.com/42185028/123511030-905a2080-d69c-11eb-813d-5f14bdd0a1a0.png'    \n },\n{\n    ap1 : 'https://user-images.githubusercontent.com/42185028/123511030-905a2080-d69c-11eb-813d-5f14bdd0a1a0.png'    \n },\n {\n    ap1 : 'https://user-images.githubusercontent.com/42185028/123511030-905a2080-d69c-11eb-813d-5f14bdd0a1a0.png'    \n },\n {\n     ap1 : 'https://user-images.githubusercontent.com/42185028/123511030-905a2080-d69c-11eb-813d-5f14bdd0a1a0.png'    \n  },\n  {\n     ap1 : 'https://user-images.githubusercontent.com/42185028/123511030-905a2080-d69c-11eb-813d-5f14bdd0a1a0.png' \n  },\n  {\n     ap1 : 'https://user-images.githubusercontent.com/42185028/123511030-905a2080-d69c-11eb-813d-5f14bdd0a1a0.png'  \n  },\n  {\n     ap1 : 'https://user-images.githubusercontent.com/42185028/123511030-905a2080-d69c-11eb-813d-5f14bdd0a1a0.png'    \n  },\n  {\n     ap1 : 'https://user-images.githubusercontent.com/42185028/123511030-905a2080-d69c-11eb-813d-5f14bdd0a1a0.png'    \n  },\n  {\n     ap1 : 'https://user-images.githubusercontent.com/42185028/123511030-905a2080-d69c-11eb-813d-5f14bdd0a1a0.png'    \n  },\n {\n     ap1 : 'https://user-images.githubusercontent.com/42185028/123511030-905a2080-d69c-11eb-813d-5f14bdd0a1a0.png'    \n  },\n  {\n    ap1 : 'https://user-images.githubusercontent.com/42185028/123511030-905a2080-d69c-11eb-813d-5f14bdd0a1a0.png'    \n },\n {\n     ap1 : 'https://user-images.githubusercontent.com/42185028/123511030-905a2080-d69c-11eb-813d-5f14bdd0a1a0.png'    \n  },\n  {\n     ap1 : 'https://user-images.githubusercontent.com/42185028/123511030-905a2080-d69c-11eb-813d-5f14bdd0a1a0.png' \n  },\n  {\n     ap1 : 'https://user-images.githubusercontent.com/42185028/123511030-905a2080-d69c-11eb-813d-5f14bdd0a1a0.png'  \n  },\n  {\n     ap1 : 'https://user-images.githubusercontent.com/42185028/123511030-905a2080-d69c-11eb-813d-5f14bdd0a1a0.png'    \n  },\n  {\n     ap1 : 'https://user-images.githubusercontent.com/42185028/123511030-905a2080-d69c-11eb-813d-5f14bdd0a1a0.png'    \n  },\n  {\n     ap1 : 'https://user-images.githubusercontent.com/42185028/123511030-905a2080-d69c-11eb-813d-5f14bdd0a1a0.png'    \n  },\n {\n     ap1 : 'https://user-images.githubusercontent.com/42185028/123511030-905a2080-d69c-11eb-813d-5f14bdd0a1a0.png'    \n  },\n  {\n     ap1 : 'https://user-images.githubusercontent.com/42185028/123511030-905a2080-d69c-11eb-813d-5f14bdd0a1a0.png'    \n  },\n {\n     ap1 : 'https://user-images.githubusercontent.com/42185028/123511030-905a2080-d69c-11eb-813d-5f14bdd0a1a0.png'    \n  },\n  {\n     ap1 : 'https://user-images.githubusercontent.com/42185028/123511030-905a2080-d69c-11eb-813d-5f14bdd0a1a0.png'    \n  },\n {\n     ap1 : 'https://user-images.githubusercontent.com/42185028/123511030-905a2080-d69c-11eb-813d-5f14bdd0a1a0.png'    \n  },\n  {\n    ap1 : 'https://user-images.githubusercontent.com/42185028/123511030-905a2080-d69c-11eb-813d-5f14bdd0a1a0.png'    \n },\n {\n     ap1 : 'https://user-images.githubusercontent.com/42185028/123511030-905a2080-d69c-11eb-813d-5f14bdd0a1a0.png'    \n  },\n  {\n     ap1 : 'https://user-images.githubusercontent.com/42185028/123511030-905a2080-d69c-11eb-813d-5f14bdd0a1a0.png' \n  },\n  {\n     ap1 : 'https://user-images.githubusercontent.com/42185028/123511030-905a2080-d69c-11eb-813d-5f14bdd0a1a0.png'  \n  },\n  {\n     ap1 : 'https://user-images.githubusercontent.com/42185028/123511030-905a2080-d69c-11eb-813d-5f14bdd0a1a0.png'    \n  },\n  {\n     ap1 : 'https://user-images.githubusercontent.com/42185028/123511030-905a2080-d69c-11eb-813d-5f14bdd0a1a0.png'    \n  },\n  {\n     ap1 : 'https://user-images.githubusercontent.com/42185028/123511030-905a2080-d69c-11eb-813d-5f14bdd0a1a0.png'    \n  },\n {\n     ap1 : 'https://user-images.githubusercontent.com/42185028/123511030-905a2080-d69c-11eb-813d-5f14bdd0a1a0.png'    \n  }]\n\n//console.log(stateLogo)\n\nexport default stateLogo;","import React,{ useEffect, useState} from 'react'\nimport './StatesDataTable.css'\nimport axios from 'axios'\nimport india from '../images/india.png'\nimport stateLogo from './stateLogo'\n\nconst StatesDataTable = () => {\n\n    const [Table, setTable] = useState([])\n    //const [image, setimage] = useState([])\n\n    const tableData=async ()=>{\n        \n        const apisData=[]\n        //const imagesData=[]\n     \n           await axios.get('https://api.rootnet.in/covid19-in/stats/latest')\n             .then(({data}) => {\n                 \n                 for(let i=1; i<((data.data.regional).length); i++){\n \n                     //setTable(data.data.regional[i])\n                     \n                     //console.log(data.data.regional[i].loc)\n                     let apiData=data.data.regional[i]\n                     apisData.push(apiData)\n\n                    \n\n                     \n\n\n                    }\n\n                    for(let j=0; j<stateLogo.length; j++){\n                       // let imgData=stateLogo[j]\n                       // apisData.push(imgData)\n                    }\n\n                    setTable(apisData)\n                    \n                    //console.log(apisData)\n                    //console.log(imagesData)\n\n                    \n \n                 \n             })\n             .catch((error)=> console.log(error + 'rwegreh'))\n    }\n\n    useEffect(()=>{\n        tableData()\n    },[])\n\n    //console.log(Table.data)\n    return (\n        <div className='tableApp'>\n            <div className=\"table-users\">\n   <div class=\"header\">States Data</div>\n   <div className='tableContent'>\n   <table cellspacing=\"0\"  >\n      <tr className='fixedTop'>\n         <th>State</th>\n         <th>Confirmed</th>\n         <th>Deaths</th>\n         <th>Recovery</th>\n         <th width=\"\">Foreign Cases</th>\n      </tr>\n\n{Table.map((item,key)=>{\n    return(<tr key={key}>\n\n       <td className='imageandname'><div><img src={india} alt='pic'/></div><div>{item.loc}</div></td>\n        <td>{item.totalConfirmed}</td>\n        <td>{item.deaths}</td>\n        <td>{item.discharged}</td>\n        <td>{item.confirmedCasesForeign}</td>\n    \n    </tr>)\n})}\n\n\n\n  \n   </table>\n   </div>\n</div>\n        </div>\n    )\n}\n\nexport default StatesDataTable\n","import React from 'react'\nimport './Home.css'\n//import Navbar from '../Navbar'\nimport MainData from '../MainData'\nimport IndiaData from '../IndiaData'\nimport StatesData from '../StatesData'\nimport TimelineData from '../TimelineData'\n//import DistrictData from '../DistrictData'\nimport StatesDataTable from '../StatesDataTable'\n\nconst Home = () => {\n    return (\n        <div>\n       \n     <MainData/>\n     <IndiaData/>\n     <StatesData/>\n     <TimelineData/>\n     <StatesDataTable/>\n     \n     \n        </div>\n    )\n}\n\nexport default Home\n","import React from 'react'\nimport './Navbar.css'\nimport HospitalStats from './HospitalStats/HospitalStats';\nimport Map from './Map/Map'\nimport Home from './Home/Home';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n   \n    NavLink\n  } from \"react-router-dom\";\n\n\nconst Navbar = () => {\n    return (\n        <div >\n      <Router>\n      <div>\n        <nav className=\"NavbarApp\">\n\n              <NavLink exact className='pagesLinks' to=\"/\" activeClassName='active-class'>             <button className='btns active' >Home</button></NavLink>\n              <NavLink exact className='pagesLinks' to=\"/hospitalstats\" activeClassName='active-class'><button className='btns'>Hospital Beds</button></NavLink>\n              <NavLink exact className='pagesLinks' to=\"/map\" activeClassName='active-class'>   <button className='btns'>Visuals</button></NavLink>\n          \n        </nav>\n\n        {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n        <Switch>\n          <Route path=\"/hospitalstats\" exact>\n              <HospitalStats/>\n            \n          </Route>\n          <Route path=\"/map\" exact>\n              <Map/>\n            \n          </Route>\n          <Route path=\"/\" exact>\n          <Home/>\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n\n\n            \n        </div>\n    )\n}\n\nexport default Navbar\n","import React from 'react';\nimport './App.css';\n//import Home from './components/Home/Home';\nimport Navbar from './components/Navbar';\n//const axios=require('axios')\nfunction App() {\n\n\n  return (\n    <div className=\"App\">\n     <Navbar/>\n    </div>\n  );\n}\n\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}